/**
 * This class is generated by jOOQ
 */
package mx.ihsa.videoclub.model.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import mx.ihsa.videoclub.model.Keys;
import mx.ihsa.videoclub.model.Public;
import mx.ihsa.videoclub.model.tables.records.StaffRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Staff extends TableImpl<StaffRecord> {

	private static final long serialVersionUID = -1166356843;

	/**
	 * The reference instance of <code>public.staff</code>
	 */
	public static final Staff STAFF = new Staff();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<StaffRecord> getRecordType() {
		return StaffRecord.class;
	}

	/**
	 * The column <code>public.staff.staff_id</code>.
	 */
	public final TableField<StaffRecord, Integer> STAFF_ID = createField("staff_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.staff.first_name</code>.
	 */
	public final TableField<StaffRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>public.staff.last_name</code>.
	 */
	public final TableField<StaffRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>public.staff.address_id</code>.
	 */
	public final TableField<StaffRecord, Short> ADDRESS_ID = createField("address_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>public.staff.email</code>.
	 */
	public final TableField<StaffRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>public.staff.store_id</code>.
	 */
	public final TableField<StaffRecord, Short> STORE_ID = createField("store_id", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>public.staff.active</code>.
	 */
	public final TableField<StaffRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.staff.username</code>.
	 */
	public final TableField<StaffRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

	/**
	 * The column <code>public.staff.password</code>.
	 */
	public final TableField<StaffRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "");

	/**
	 * The column <code>public.staff.last_update</code>.
	 */
	public final TableField<StaffRecord, Timestamp> LAST_UPDATE = createField("last_update", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.staff.picture</code>.
	 */
	public final TableField<StaffRecord, byte[]> PICTURE = createField("picture", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * Create a <code>public.staff</code> table reference
	 */
	public Staff() {
		this("staff", null);
	}

	/**
	 * Create an aliased <code>public.staff</code> table reference
	 */
	public Staff(String alias) {
		this(alias, STAFF);
	}

	private Staff(String alias, Table<StaffRecord> aliased) {
		this(alias, aliased, null);
	}

	private Staff(String alias, Table<StaffRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<StaffRecord, Integer> getIdentity() {
		return Keys.IDENTITY_STAFF;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<StaffRecord> getPrimaryKey() {
		return Keys.STAFF_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<StaffRecord>> getKeys() {
		return Arrays.<UniqueKey<StaffRecord>>asList(Keys.STAFF_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<StaffRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<StaffRecord, ?>>asList(Keys.STAFF__STAFF_ADDRESS_ID_FKEY, Keys.STAFF__STAFF_STORE_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Staff as(String alias) {
		return new Staff(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Staff rename(String name) {
		return new Staff(name, null);
	}
}
